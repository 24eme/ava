degustation:
  url: /degustation
  param: { module: degustation, action: index }
  requirements:
    sf_method: [get]
  class: DegustationGeneralRoute

degustation_lot:
  url: /degustation/lot/:campagne/:id
  param: { module: degustation, action: lot }
  requirements:
    sf_method: [get]

degustation_etablissement_list:
  url: /degustation/etablissement/:id
  param: { module: degustation, action: list }
  class: DegustationRoute
  options:
    model:    Etablissement
    type:     object

degustation_prelevements_etape:
  url: /degustation/:id/prelevements
  param: { module: degustation, action: prelevementsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_tables_etape:
  url: /degustation/:id/tables
  param: { module: degustation, action: tablesEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_anonymats_etape:
  url: /degustation/:id/anonymats
  param: { module: degustation, action: anonymatsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
    requirements:
      sf_method: [get]

degustation_commission_etape:
  url: /degustation/:id/commission
  param: { module: degustation, action: commissionEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
    requirements:
      sf_method: [get]

degustation_resultats_etape:
  url: /degustation/:id/resultats-presences
  param: { module: degustation, action: resultatsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_notifications_etape:
  url: /degustation/:id/notifications
  param: { module: degustation, action: notificationsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_prelevement_lots:
  url: /degustation/:id/prelevement-lots
  param: { module: degustation, action: prelevementLots }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_selection_degustateurs:
  url: /degustation/:id/selection-degustateurs/:college
  param: { module: degustation, action: selectionDegustateurs, college: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_validation:
  url: /degustation/:id/validation
  param: { module: degustation, action: validation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_confirmation:
  url: /degustation/:id/confirmation
  param: { module: degustation, action: confirmation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_preleve:
  url: /degustation/:id/preleve
  param: { module: degustation, action: preleve }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_preleve_update_logement:
  url: /degustation/:id/update-lot-logement/:lot
  param: { module: degustation, action: updateLotLogement }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_update_lot:
  url: /degustation/:id/update-lot/:lot
  param: { module: degustation, action: updateLot }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_degustateurs_confirmation:
  url: /degustation/:id/degustateurs-confirmation
  param: { module: degustation, action: degustateursConfirmation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_degustateur_absence:
  url: /degustation/:id/degustateur-absence/:college/:degustateurId
  param: { module: degustation, action: degustateurAbsence }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_organisation_table:
  url: /degustation/:id/organisation-table/:numero_table/:tri
  param: { module: degustation, action: organisationTable, numero_table: 0, tri: 0}
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_tri_table:
  url: /degustation/:id/tri-table/:numero_table
  param: { module: degustation, action: triTable}
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [post]

degustation_organisation_table_recap:
  url: /degustation/:id/organisation-table-recap/:tri
  param: { module: degustation, action: organisationTableRecap, tri: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_ajout_leurre:
  url: /degustation/:id/ajout-leurre
  param: { module: degustation, action: ajoutLeurre, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_presences:
  url: /degustation/:id/presences/:numero_table
  param: { module: degustation, action: presences, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_resultats:
  url: /degustation/:id/resultats/:numero_table
  param: { module: degustation, action: resultats, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_degustateurs_presences:
  url: /degustation/:id/degustateurs-presence/:numero_table
  param: { module: degustation, action: resultats }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_devalidation:
  url: /degustation/:id/devalidation
  param: { module: degustation, action: devalidation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]


degustation_redirect:
  url: /degustation/:id/redirect
  param: { module: degustation, action: redirect }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_manquements:
  url: /degustation/manquements
  param: { module: degustation, action: manquements }
  requirements:
    sf_method: [get]

degustation_elevages:
  url: /degustation/elevages
  param: { module: degustation, action: elevages }
  requirements:
    sf_method: [get]

degustation_redeguster:
  url: /degustation/lots/:id/:index/redeguster
  param: { module: degustation, action: redeguster }
  requirements:
    sf_method: [get]

degustation_etiquette_pdf:
  url: /degustation/:id/etiquettes/pdf
  param: { module: degustation, action: etiquettesPdf }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_etiquette_anonymes_pdf:
  url: /degustation/:id/etiquettesAnonymes/pdf
  param: { module: degustation, action: etiquettesAnonymesPDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_fiche_individuelle_pdf:
    url: /degustation/:id/ficheIndividuelle/pdf
    param: { module: degustation, action: ficheIndividuellePDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]


degustation_fiche_echantillons_preleves_pdf:
    url: /degustation/:id/ficheEchantillonsPreleves/pdf
    param: { module: degustation, action: ficheEchantillonsPrelevesPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_echantillons_preleves_table_pdf:
    url: /degustation/:id/ficheEchantillonsPrelevesTable/pdf
    param: { module: degustation, action: ficheEchantillonsPrelevesTablePDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_conformite_pdf:
  url: /degustation/:id/:identifiant/DegustationConformite/pdf
  param: { module: degustation, action: degustationConformitePDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get,post]

degustation_non_conformite_pdf:
  url: /degustation/:id/:identifiant/:lot_dossier/:lot_num_anon/DegustationNonConformite/pdf
  param: { module: degustation, action: degustationNonConformitePDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get,post]

degustation_mail_resultats_previsualisation:
  url: /degustation/:id/:identifiant/mail-previsualisation
  param: { module: degustation, action: mailPrevisualisation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_envoi_mail_resultats:
  url: /degustation/:id/:identifiant/envoi-mail
  param: { module: degustation, action: setEnvoiMail }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

retrait_non_conformite_pdf:
  url: /degustation/:id/:identifiant/:lot_dossier/RetraitNonConformite/pdf
  param: { module: degustation, action: retraitNonConformitePDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get,post]

degustation_fiche_recap_tables_pdf:
    url: /degustation/:id/ficheRecapTables/pdf
    param: { module: degustation, action: ficheRecapTablesPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_lots_a_prelever_pdf:
    url: /degustation/:id/ficheLotsAPrelever/pdf
    param: { module: degustation, action: ficheLotsAPreleverPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_individuelle_lots_a_prelever_pdf:
    url: /degustation/:id/ficheIndividuelleLotsAPrelever/pdf
    param: { module: degustation, action: ficheIndividuelleLotsAPreleverPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_presence_degustateurs_pdf:
    url: /degustation/:id/fichePresenceDegustateurs/pdf
    param: { module: degustation, action: fichePresenceDegustateursPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_proces_verbal_degustation_pdf:
    url: /degustation/:id/procesVerbalDegustation/pdf
    param: { module: degustation, action: procesVerbalDegustationPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_anonymize:
    url: /degustation/:id/anonymize
    param: {module : degustation, action: anonymize }
    class: DegustationRoute
    options:
        model:    Degustation
        type:     object
    requirements:
    sf_method: [get]

degustation_desanonymize:
    url: /degustation/:id/desanonymize
    param: {module : degustation, action: desanonymize }
    class: DegustationRoute
    options:
        model:    Degustation
        type:     object
    requirements:
    sf_method: [get]
