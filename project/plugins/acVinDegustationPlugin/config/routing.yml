degustation:
  url: /degustation
  param: { module: degustation, action: index }
  requirements:
    sf_method: [get]
  class: DegustationGeneralRoute

degustation_liste:
  url: /degustation/all/:campagne
  param: { module: degustation, action: liste }
  requirements:
    sf_method: [get]
  class: DegustationGeneralRoute

degustation_liste_declarant:
  url: /degustation/all/:identifiant/:campagne
  param: { module: degustation, action: listeDeclarant }
  requirements:
    sf_method: [get]
  class: DegustationGeneralRoute

degustation_prelevables:
  url: /degustation/prelevables
  param: { module: degustation, action: prelevables }
  requirements:
    sf_method: [get]
  class: DegustationGeneralRoute

degustation_declarant_lots_liste:
  url: /degustation/declarant/:identifiant
  param: { module: degustation, action: lotsListe }
  class: DegustationDeclarantRoute
  options:
    model:    Etablissement
    type:     object

degustation_lot_historique:
  url: /historique/:identifiant/:unique_id
  param: { module: degustation, action: lotHistorique }
  class: DegustationDeclarantRoute
  options:
    model:    Etablissement
    type:     object
  requirements:
    sf_method: [get]

degustation_lot_modification:
  url: /historique/:identifiant/:unique_id/modification
  param: { module: degustation, action: lotModification }
  class: DegustationDeclarantRoute
  options:
    model:    Etablissement
    type:     object
  requirements:
    sf_method: [get, post]

degustation_prelevements_etape:
  url: /degustation/:id/prelevements
  param: { module: degustation, action: prelevementsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_tables_etape:
  url: /degustation/:id/tables
  param: { module: degustation, action: tablesEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_anonymats_etape:
  url: /degustation/:id/anonymats
  param: { module: degustation, action: anonymatsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
    requirements:
      sf_method: [get]

degustation_commission_etape:
  url: /degustation/:id/commission
  param: { module: degustation, action: commissionEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
    requirements:
      sf_method: [get]

degustation_resultats_etape:
  url: /degustation/:id/resultats-presences
  param: { module: degustation, action: resultatsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_notifications_etape:
  url: /degustation/:id/notifications
  param: { module: degustation, action: notificationsEtape }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_prelevement_lots:
  url: /degustation/:id/prelevement-lots
  param: { module: degustation, action: prelevementLots }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_selection_degustateurs:
  url: /degustation/:id/selection-degustateurs/:college
  param: { module: degustation, action: selectionDegustateurs, college: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_ajout_degustateurPresence:
  url: /degustation/:id/ajout-degustateur-presence/:table
  param: { module: degustation, action: ajoutDegustateurPresence, table: null}
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_convocations:
  url: /degustation/:id/convocations
  param: { module: degustation, action: convocations }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_convocations_mails:
  url: /degustation/:id/convocations/mails
  param: { module: degustation, action: convocationsMails }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_convocations_mail_degustateur:
  url: /degustation/:id/convocations/mail/:college_key/degustateur/:id_compte
  param: { module: degustation, action: convocationDegustateurMail }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_preleve:
  url: /degustation/:id/preleve
  param: { module: degustation, action: preleve }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_supprimer_lot_non_preleve:
  url: /degustation/:id/supprimer-lot-non-preleve/:lot
  param: { module: degustation, action: supprimerLotNonPreleve }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_preleve_update_logement:
  url: /degustation/:id/update-lot-logement/:lot
  param: { module: degustation, action: updateLotLogement }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_update_lot:
  url: /degustation/:id/update-lot/:lot
  param: { module: degustation, action: updateLot }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_degustateurs_confirmation:
  url: /degustation/:id/degustateurs-confirmation
  param: { module: degustation, action: degustateursConfirmation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_degustateur_absence:
  url: /degustation/:id/degustateur-absence/:college/:degustateurId
  param: { module: degustation, action: degustateurAbsence }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_organisation_table:
  url: /degustation/:id/organisation-table/:numero_table
  param: { module: degustation, action: organisationTable, numero_table: 0, tri: 0}
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_position_lot_up:
  url: /degustation/:id/position-lot/:index/up/:numero_table
  param: { module: degustation, action: changePositionLot, sens: 1}
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_position_lot_down:
  url: /degustation/:id/position-lot/:index/down/:numero_table
  param: { module: degustation, action: changePositionLot, sens: -1}
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_tri_table:
  url: /degustation/:id/tri-table/:numero_table
  param: { module: degustation, action: triTable}
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [post]

degustation_organisation_table_recap:
  url: /degustation/:id/organisation-table-recap/:tri
  param: { module: degustation, action: organisationTableRecap, tri: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_ajout_leurre:
  url: /degustation/:id/ajout-leurre
  param: { module: degustation, action: ajoutLeurre, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_presences:
  url: /degustation/:id/presences/:numero_table
  param: { module: degustation, action: presences, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_resultats:
  url: /degustation/:id/resultats/:numero_table
  param: { module: degustation, action: resultats, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_degustateurs_presences:
  url: /degustation/:id/degustateurs-presence/:numero_table
  param: { module: degustation, action: resultats }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_visualisation:
  url: /degustation/:id/visualisation
  param: { module: degustation, action: visualisation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_manquements:
  url: /degustation/manquements
  param: { module: degustation, action: manquements }
  requirements:
    sf_method: [get]

degustation_elevages:
  url: /degustation/elevages
  param: { module: degustation, action: elevages }
  requirements:
    sf_method: [get]

degustation_redeguster:
  url: /degustation/lots/:id/:lot/redeguster
  param: { module: degustation, action: redeguster }
  requirements:
    sf_method: [get]

degustation_recours_oc:
  url: /degustation/lots/:id/:lot/recours
  param: { module: degustation, action: recoursOc }
  requirements:
    sf_method: [get]

degustation_lot_reputeconforme:
  url: /degustation/lots/:id/:unique_id/reputeconforme
  param: { module: degustation, action: lotReputeConforme }
  requirements:
    sf_method: [get]

degustation_lot_affectable:
  url: /degustation/lots/:id/:unique_id/affectable
  param: { module: degustation, action: lotAffectable }
  requirements:
    sf_method: [get]

degustation_lot_conforme_appel:
  url: /degustation/lots/:id/:lot/conforme-appel
  param: { module: degustation, action: lotConformeAppel }
  requirements:
    sf_method: [get]

degustation_etiquette_pdf:
  url: /degustation/:id/etiquettes/pdf
  param: { module: degustation, action: etiquettesPrlvmtPdf }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_etiquette_csv:
  url: /degustation/:id/etiquettes/csv
  param: { module: degustation, action: etiquettesPrlvmtCsv }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_etiquettes_tables_echantillons_par_anonymat_pdf:
  url: /degustation/:id/etiquettesAnonymes/pdf
  param: { module: degustation, action: etiquettesTablesEchantillonsParAnonymatPDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_fiche_individuelle_pdf:
    url: /degustation/:id/ficheIndividuelle/pdf
    param: { module: degustation, action: ficheIndividuellePDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]


degustation_fiche_tables_echantillons_par_dossier_pdf:
    url: /degustation/:id/ficheTablesEchantillonsParDossier/pdf
    param: { module: degustation, action: ficheTablesEchantillonsParDossierPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_tables_echantillons_par_anonymat_pdf:
    url: /degustation/:id/ficheTablesEchantillonsParAnonymat/pdf
    param: { module: degustation, action: ficheTablesEchantillonsParAnonymatPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_all_notification_pdf:
  url: /degustation/:id/degustation-notification/pdf
  param: { module: degustation, action: degustationAllNotificationsPDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_conformite_pdf:
  url: /degustation/:id/:identifiant/DegustationConformite/pdf
  param: { module: degustation, action: degustationConformitePDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get,post]

degustation_non_conformite_pdf:
  url: /degustation/:id/:lot_dossier/:lot_archive/nonConformite/pdf
  param: { module: degustation, action: degustationNonConformitePDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get,post]

degustation_mail_resultats_previsualisation:
  url: /degustation/:id/:identifiant/mail-previsualisation
  param: { module: degustation, action: mailPrevisualisation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_envoi_mail_resultats:
  url: /degustation/:id/:identifiant/envoi-mail
  param: { module: degustation, action: setEnvoiMail }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

retrait_non_conformite_pdf:
  url: /degustation/:id/:identifiant/:lot_dossier/RetraitNonConformite/pdf
  param: { module: degustation, action: retraitNonConformitePDF }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get,post]

degustation_fiche_recap_tables_pdf:
    url: /degustation/:id/ficheRecapTables/pdf
    param: { module: degustation, action: ficheRecapTablesPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_lots_a_prelever_pdf:
    url: /degustation/:id/ficheLotsAPrelever/pdf
    param: { module: degustation, action: ficheLotsAPreleverPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_individuelle_lots_a_prelever_pdf:
    url: /degustation/:id/ficheIndividuelleLotsAPrelever/pdf
    param: { module: degustation, action: ficheIndividuelleLotsAPreleverPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_fiche_presence_degustateurs_pdf:
    url: /degustation/:id/fichePresenceDegustateurs/pdf
    param: { module: degustation, action: fichePresenceDegustateursPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_proces_verbal_degustation_pdf:
    url: /degustation/:id/procesVerbalDegustation/pdf
    param: { module: degustation, action: procesVerbalDegustationPDF }
    class: DegustationRoute
    options:
      model:    Degustation
      type:     object
    requirements:
      sf_method: [get]

degustation_anonymize:
    url: /degustation/:id/anonymize
    param: {module : degustation, action: anonymize }
    class: DegustationRoute
    options:
        model:    Degustation
        type:     object
    requirements:
    sf_method: [get]

degustation_desanonymize:
    url: /degustation/:id/desanonymize
    param: {module : degustation, action: desanonymize }
    class: DegustationRoute
    options:
        model:    Degustation
        type:     object
    requirements:
    sf_method: [get]

degustation_get_courrier_auth_conforme:
  url: /degustation/get/:id/:auth/conforme/:identifiant
  param: {module: degustation, action: getCourrierWithAuth, type: Conformite}
  class: DegustationRoute
  options:
    model: Degustation
    type: object
  requirements:
    sf_method: [get]


degustation_get_courrier_auth_nonconforme:
  url: /degustation/get/:id/:auth/nonconforme/:lot_dossier/:lot_archive
  param: {module: degustation, action: getCourrierWithAuth, type: NonConformite}
  class: DegustationRoute
  options:
    model: Degustation
    type: object
  requirements:
    sf_method: [get]

degustation_convocation_auth:
  url: /degustation/convocation/:id/:college/:identifiant/:auth/confirmation/:presence
  param: {module: degustation, action: convocationWithAuth, presence: 1}
  class: DegustationRoute
  options:
    model: Degustation
    type: object
  requirements:
    sf_method: [get, post]

degustation_affectation_lot:
  url: /historique/:id/:unique_id/affectation
  param: {module: degustation, action: lotAffectation}
  class: DegustationRoute
  options:
    model: Degustation
    type: object
  requirements:
    sf_method: [get, post]
